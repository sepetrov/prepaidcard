openapi: 3.0.1
info:
  title: Prepaid Card API
  description: |
    This is a development exercise for building a prepaid card service written in Go.

    The service has RESTful API and does not use any authentication mechanism. It is a fictional and the model is
    intentionally simplified.

    The service combines functionality to meet requirements of three actors:
    - **bank**: this is the entity controlling the service and only authorised personell must have access to these endpoints;
    - **user**: this is the cardholder;
    - **merchant**: this is a merchant, which accepts card payments via the service.
  version: 1.0.0
servers:
  -
    url: "{protocol}://{host}:{port}/api"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
      port:
        default: "8080"
components:
  responses:
    404:
      title: Resource Not Found
      description: The requested resource cannot be found.
      $ref: "#/components/responses/404"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/error404"
  schemas:
    authorizationRequest:
      title: Authorization Request
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        cardUUID:
          type: string
          format: uuid
        merchantUUID:
          type: string
          format: uuid
        blockedAmount:
          type: string
          format: uint64
        capturedAmount:
          type: string
          format: uint64
        refundedAmount:
          type: string
          format: uint64
        history:
          type: array
          items:
            $ref: "#/components/schemas/authorizationRequestSnapshot"
      example:
        uuid: DC41D7A5-2D28-4DB9-9122-72FE708D4934
        cardUUID: 228A37D0-3DA2-4E9E-AA61-11EFD39E0382
        merchantUUID: 1EA91C35-3D61-472D-8080-CE5544DF3C4A
        blockedAmount: "2099"
        capturedAmount: "0"
        refundedAmount: "0"
        history:
          - uuid: 584D99EC-8160-42B1-87BC-62476CC2045D
            blockedAmount: "2099"
            capturedAmount: "0"
            refundedAmount: "0"
            createdAt: "2018-01-20T16:28:43+00:00"
    authorizationRequestSnapshot:
      title: Authorization Request Snapshot
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        blockedAmount:
          type: string
          format: uint64
        capturedAmount:
          type: string
          format: uint64
        refundedAmount:
          type: string
          format: uint64
        createdAt:
          type: string
          format: dateTime ISO8601
      example:
        uuid: 584D99EC-8160-42B1-87BC-62476CC2045D
        blockedAmount: "2099"
        capturedAmount: "1000"
        refundedAmount: "0"
        createdAt: "2018-01-20T16:28:43+00:00"
    card:
      title: Card
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        availableBalance:
          type: string
          format: uint64
        blockedBalance:
          type: string
          format: uint64
      example:
        uuid: 68022AD3-7A94-452E-AC9C-A64F14EE5CD1
        availableBalance: "0"
        blockedBalance: "0"
    error:
      title: Error
      $ref: "#/components/schemas/error"
      type: object
      description: Problem Details Object. See [RFC7807](https://tools.ietf.org/html/rfc7807#section-3.1).
      properties:
        type:
          type: string
          required: false
          default: about:blank
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
          required: false
        instance:
          type: string
          required: false
      example:
        type: /doc/error/validation
        title: Validation Error
        status: 422
        invalidParameters:
          - name: amount
            reason: must be unsigned integer
    error404:
      title: Error Not Found
      $ref: "#/components/schemas/error404"
      type: object
      description: Problem Details Object. See [RFC7807](https://tools.ietf.org/html/rfc7807#section-4.2).
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
          required: false
        instance:
          type: string
          required: false
      example:
        type: about:blank
        title: Not Found
        status: 404
        instance: /card/87656343-74BF-443D-B5F8-C683FD31CFE0
paths:
  /card:
    post:
      summary: Registers a new card
      description: |
        Registers a new card.

        **Actor:** bank
      responses:
        201:
          description: A card is successfully registered and the card details are returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/card"
  /card/{uuid}:
    get:
      summary: Returns card details
      description: |
        Returns the details of card with UUID `{uuid}`.

        **Actors**: bank, user
      parameters:
        - name: uuid
          in: path
          description: The card UUID.
          required: true
          schema:
            type: string
      responses:
        200:
          description: The card with the requested UUID is found and it's details returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/card"
        404:
          $ref: "#/components/responses/404"
  /card/{uuid}/load:
    post:
      summary: Loads money onto card
      description: |
        Adds `amount` pence (GBp) to the balance of card with UUID `{uuid}` and returns the transaction UUID.

        **Actors**: bank, user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  format: uint64
              example:
                amount: "1950"
      responses:
        201:
          description: Loads the card and returns the transaction reference.
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                example:
                  uuid: 373A8AF3-2712-46F3-B7E0-A23FD74E4270
        404:
            $ref: "#/components/responses/404"
        422:
          description: The request cannot be processed due to an error.
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/error"
  /authorization-request:
    post:
      summary: Creates authorizaton request
      description: |
        Creates authorizaton request from merchant with UUID `merchantUUID` to block `amount` pence (BPp) from card with UUID `cardUuid`.
        
        **Actor**: merchant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                merchantUUID:
                  type: string
                  format: uuid
                cardUUID:
                  type: string
                  format: uuid
                amount:
                  type: string
                  format: uint64
              example:
                merchantUUID: 1EA91C35-3D61-472D-8080-CE5544DF3C4A
                cardUUID: 228A37D0-3DA2-4E9E-AA61-11EFD39E0382
                amount: "2099"
      responses:
        201:
          description: The request is authorized and the authorization request details are returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authorizationRequest"
        422:
          description: The request cannot be processed due to an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"