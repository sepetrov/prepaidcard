ARG BINARY
ARG GOVERSION
ARG VERSION



FROM golang:${GOVERSION}-alpine AS builder

ARG BINARY
ARG PACKAGE
ARG VERSION

WORKDIR /go/src/$PACKAGE

RUN set -ex ; \
    apk update ; \
    apk add \
        ca-certificates \
        curl \
        git \
        make \
        tree \
    ;

ADD https://raw.githubusercontent.com/golang/dep/master/install.sh /install-dep.sh
RUN set -ex ; \
    chmod +x /install-dep.sh ; \
    /install-dep.sh ; \
    rm /install-dep.sh

COPY cmd cmd
COPY pkg pkg
COPY Gopkg.lock Gopkg.lock
COPY Gopkg.toml Gopkg.toml

RUN set -ex ; \
    dep ensure ; \
    tree ; \
    CGO_ENABLED=0 go install -a -ldflags '-s -w' -v ${PACKAGE}/cmd/${BINARY}



FROM scratch

ARG BINARY

COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /go/bin/${BINARY} /usr/local/bin/docker-entrypoint

EXPOSE 8080
ENTRYPOINT ["docker-entrypoint"]